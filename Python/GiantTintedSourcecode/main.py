import disnake
import sqlite3
import requests
import os, sys, json
import traceback
from disnake.ext import commands
import keep_alive

config = json.load(open('config.json', 'rb'))
dev_ids = [834377109945319488, 970628302710648863, 692071250968969266]

prefix = '#'

keep_alive.keep_alive()


class Bot(commands.Bot):
    def __init__(self):

        super().__init__(command_prefix=[
            f'{prefix}', '<@!985938937493192874>', '<@985938937493192874>'
        ],
                         intents=disnake.Intents.all(),
                         help_command=None)
        self.data = sqlite3.connect('data.sqlite3', timeout=1)
        self.cursor = self.data.cursor()

    async def on_ready(self):

        stat = disnake.Streaming(name=f"{prefix}help",
                                 url="https://www.twitch.tv/404")
        print("Bot is ready. Logged as ", self.user)
        members = 0
        """		for i in list(map(lambda guild: len(guild.members), self.guilds)):
			members += i"""

        mems = 0
        for i in list(map(lambda guild: len(guild.members), self.guilds)):
            mems += i
        print(f"–Æ–∑–µ—Ä–æ–≤: {mems}\n–ì–∏–ª—å–¥–∏–π: {len(self.guilds)}")

        self.data.execute('CREATE TABLE IF NOT EXISTS "admin"			("id" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "antibot"			("guild" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "antiev"			("guild" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "antilink"		("guild" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "autorole"		("id" INT, "role_id" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "blacklist"		("id" INT, "reason" TEXT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "channel"			("id" INT, "guild" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "channels"		("id" INT, "name" TEXT, "position" INT, "type" TEXT, "cn" TEXT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "emojis"			("id" INT, "url" TEXT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "exceptchan"		("id" INT, "channel" INT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "language"		("guild" INT, "language" TEXT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "leave_ban"		("guild_id" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "new_users"		("guild_id" INT, "days" INT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "rls"				("id" INT, "name" TEXT, "position" INT, "color" TEXT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "warns"			("guild" INT, "mem" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "wl"				("guild" INT, "id" INT)')
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "guild"			("guildID" INT, "ownerID" INT, "voiceChannelID" INT, "voiceCategoryID" INT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "guildSettings"	("guildID" INT, "channelName" TEXT, "channelLimit" INT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "userSettings"	("userID" INT, "channelName" TEXT, "channelLimit" INT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "voiceChannel"	("userID" INT, "voiceID" INT)'
        )
        self.data.execute(
            'CREATE TABLE IF NOT EXISTS "global_chat"	("name" TEXT, "guild" INT)'
        )
        self.data.commit()

        await self.change_presence(activity=stat)

        for file in os.listdir('./cogs'):
            if file.endswith('.py'):
                self.load_extension(f"cogs.{file[:-3]}")

    async def on_guild_remove(self, guild):
        self.cursor.execute(f"DELETE FROM channels WHERE id = {guild.id}")
        self.cursor.execute(f"DELETE FROM rls WHERE id = {guild.id}")
        self.cursor.execute(f"DELETE FROM channel WHERE guild = {guild.id}")
        self.data.execute(f'DELETE FROM global_chat WHERE guild = {guild.id}')
        self.data.execute(f'DELETE FROM antibot WHERE guild = {guild.id}')
        self.data.execute(f'DELETE FROM antiev WHERE guild = {guild.id}')
        self.data.execute(f'DELETE FROM antilink WHERE guild = {guild.id}')
        self.data.execute(f'DELETE FROM leave_ban WHERE guild_id = {guild.id}')
        self.data.execute(f'DELETE FROM new_users WHERE guild_id = {guild.id}')
        self.data.execute(f'DELETE FROM warns WHERE guild = {guild.id}')
        self.data.execute(f'DELETE FROM wl WHERE guild = {guild.id}')
        self.data.commit()

    async def on_command(self, ctx):
        try:
            requests.post(
                url=
                "https://discord.com/api/webhooks/1012676528649281536/w-5wZK83zpoxt4mqIgUYcsokNBcHJsRxv0MKaZVEK_Lw80qMK368ycp-AMKkuGpy6JXF",
                json={
                    "content":
                    "",
                    "username":
                    "",
                    "embeds": [{
                        "title": f"{ctx.prefix}{ctx.command}",
                        "description":
                        f"**–°–µ—Ä–≤–µ—Ä: `{ctx.guild.name}` | `{ctx.guild.id}`\n\n–ö–∞–Ω–∞–ª: `{ctx.channel.name}` | `{ctx.channel.id}`\n\n–ê–≤—Ç–æ—Ä: `{ctx.author.name}` | `{ctx.author.id}`\n\n–í–ª–∞–¥–µ–ª–µ—Ü: `{ctx.guild.owner}` | `{ctx.guild.owner_id}`**\n\n–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: `{len(ctx.guild.members)}`",
                        "color": 0xc27c0e
                    }]
                })
        except:
            requests.post(
                url=
                "https://discord.com/api/webhooks/1012676528649281536/w-5wZK83zpoxt4mqIgUYcsokNBcHJsRxv0MKaZVEK_Lw80qMK368ycp-AMKkuGpy6JXF",
                json={
                    "content":
                    "",
                    "username":
                    "",
                    "embeds": [{
                        "title": f"/{ctx.command}",
                        "description":
                        f"**–°–µ—Ä–≤–µ—Ä: `{ctx.guild.name}` | `{ctx.guild.id}`\n\n–ö–∞–Ω–∞–ª: `{ctx.channel.name}` | `{ctx.channel.id}`\n\n–ê–≤—Ç–æ—Ä: `{ctx.author.name}` | `{ctx.author.id}`\n\n–í–ª–∞–¥–µ–ª–µ—Ü: `{ctx.guild.owner}` | `{ctx.guild.owner_id}`**\n\n–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: `{len(ctx.guild.members)}`",
                        "color": 0xc27c0e
                    }]
                })

    async def on_command_error(self, ctx, error):
        if type(error) == commands.MissingPermissions:
            await ctx.send(embed=disnake.Embed(
                title=':gear: | –£–ø—Å...',
                description=
                f">>> **–ü–æ—Ö–æ–∂–µ —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤, —á—Ç–æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É**",
                color=disnake.Colour(config['color'])))
        if type(error) == commands.CommandNotFound:
            await ctx.send(embed=disnake.Embed(
                title='‚ùå | 404',
                description=
                f">>> **–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑**",
                color=disnake.Colour(config['color'])))
        if type(error) == commands.CommandOnCooldown:
            await ctx.send(embed=disnake.Embed(
                title="üí§ | –ú–µ–¥–ª–µ–Ω–Ω–µ–µ...",
                description=
                f">>> **–ü–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã, –ø–æ–¥–æ–∂–¥–∏—Ç–µ `{round(error.retry_after, 1)} —Å–µ–∫—É–Ω–¥`**",
                color=disnake.Colour(config['color'])))
        if type(error) == disnake.Forbidden:
            await ctx.send(embed=disnake.Embed(
                title="üí® | –ù–µ—Ç –ø—Ä–∞–≤",
                description=
                f">>> **–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ –ø—Ä–∞–≤**",
                color=disnake.Colour(config['color'])))
        if type(error) == disnake.errors.NotFound:
            await ctx.send("–ù–µ—Ç —Ç–∞–∫–æ–≥–æ...")
        if type(error) == commands.MissingRequiredArgument:
            return
        else:
            try:
                requests.post(
                    url=
                    "https://discord.com/api/webhooks/1012676528649281536/w-5wZK83zpoxt4mqIgUYcsokNBcHJsRxv0MKaZVEK_Lw80qMK368ycp-AMKkuGpy6JXF",
                    data={
                        'content': f"`{ctx.prefix}{ctx.command}` -> {error}"
                    })
            except:
                pass


bot = Bot()






@bot.event
async def on_guild_join(guild):
    embed = disnake.Embed(
        title=f'üíú | –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ EpicBot!',
        description=
        f'üöÄ **–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç** \n`1.` –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n `2.` –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –º–æ—é —Ä–æ–ª—å –∫–∞–∫ –º–æ–∂–Ω–æ –≤—ã—à–µ, —á—Ç–æ–±—ã –≤—Å–µ –º–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ \n `3.` –ò–∑—É—á–∏—Ç–µ –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã: `#help` \n üîó**–°—Å—ã–ª–∫–∏:** \n>>> [–î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä](https://discord.com/MwTY7vYRb4)',
        color=0x71368a)
    await guild.text_channels[0].send(embed=embed)


@bot.command()
async def dev_help(ctx):
    global dev_ids
    if not ctx.author.id in dev_ids:
        return await ctx.send("**X–º–º...**",
                              embed=disnake.Embed(
                                  title=':x:–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
                                  description=f'–¢—ã –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ -_-',
                                  colour=0xf00a0a))
    await ctx.send(embed=disnake.Embed(
        title='üìñ | –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞',
        description=
        f'>>> **`{prefix}dev_help` - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é x–µ–ª–ø**\n\n**`{prefix}server` - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µx —Å–µ—Ä–≤–µ—Ä–æ–≤ + –ê–∏–¥–∏**\n\n**`{prefix}inv [ID —Å–µ—Ä–≤–µ—Ä–∞]` - –°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≥–¥–µ –µ—Å—Ç—å –±–æ—Ç **\n\n**`{prefix}echo [–¢–µ–∫—Å—Ç]` - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞**\n\n**`{prefix}ping` - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –±–æ—Ç–∞**',
        colour=disnake.Color.yellow()))


@bot.command()
async def server(ctx):
    global dev_ids
    if not ctx.author.id in dev_ids:
        return await ctx.send("**X–º–º...**",
                              embed=disnake.Embed(
                                  title=':x:–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
                                  description=f'–¢—ã –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ -_-',
                                  colour=0xf00a0a))
    names = "\n".join(f"{x}" for x in bot.guilds)
    ids = "\n".join(f"{x.id}" for x in bot.guilds)
    embed = disnake.Embed(title='–í—Å–µ —Å–µ—Ä–≤–µ—Ä–∞',
                          description=f'',
                          colour=0xf00a0a)
    embed.add_field(name=f'–ù–∞–∑–≤–∞–Ω–∏—è:', value=f'```{names}```')
    embed.add_field(name=f'\n\nID:', value=f'```{ids}```')
    await ctx.send(embed=embed)


@bot.command()
async def send(ctx, member: disnake.Member, *, message=None):
    for guild in bot.guilds:
        for channel in guild.text_channels:
            if channel.permissions_for(member).send_messages:
                await guild.text_channels[0].send(embed=disnake.Embed(
                    description=message, colour=disnake.Color.red()))
                break


@bot.command()
async def inv(ctx, server_id: int):
    global dev_ids
    if not ctx.author.id in dev_ids:
        return await ctx.send("**X–º–º...**",
                              embed=disnake.Embed(
                                  title=':x:–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
                                  description=f'–¢—ã –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ -_-',
                                  colour=0xf00a0a))
    guild = bot.get_guild(server_id)
    invite = await guild.text_channels[0].create_invite(max_age=0,
                                                        max_uses=0,
                                                        temporary=False)
    await ctx.send(f"https://discord.com/{invite.code}")


@bot.command()
async def echo(ctx, *, msg: str = None):
    global dev_ids
    if not ctx.author.id in dev_ids:
        return await ctx.send("**X–º–º...**",
                              embed=disnake.Embed(
                                  title=':x:–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
                                  description=f'–¢—ã –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ -_-',
                                  colour=0xf00a0a))
    await ctx.message.delete()
    await ctx.send(embed=disnake.Embed(description=msg))


@bot.command()
async def idea(ctx, *, idea=None):
    await ctx.message.delete()
    if idea is None:
        embed = disnake.Embed(title="‚ùå | –û—à–∏–±–∫–∞",
                              description=">>> –£–∫–∞–∂–∏—Ç–µ –∏–¥–µ—é `#idea [–∏–¥–µ—è]`",
                              color=disnake.Color.red())
        await ctx.send(embed=embed)
    else:
        member = await bot.fetch_channel(993546789309403296)
        embed = disnake.Embed(
            title="–ù–æ–≤–∞—è –ò–¥–µ—è!",
            description=
            f">>> **–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:**\n`{ctx.author}`\n\n**–ê–π–¥–∏:**\n`{ctx.author.id}`\n\n**–ò–¥–µ—è:**\n`{idea}`",
            color=disnake.Color.green())
        await member.send(embed=embed)
        embed2 = disnake.Embed(
            title="‚úÖ | –£—Å–ø–µ—à–Ω–æ!",
            description=
            f">>> –ò–¥–µ—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –Ω–∞ —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∏–µ",
            color=disnake.Color.green())

        await ctx.send(embed=embed2)


@bot.command()
async def bug(ctx, *, bug=None):
    await ctx.message.delete()
    if bug is None:
        embed = disnake.Embed(title="‚ùå | –û—à–∏–±–∫–∞",
                              description=">>> –£–∫–∞–∂–∏—Ç–µ –±–∞–≥ `#bug [–±–∞–≥]`",
                              color=disnake.Color.red())
        await ctx.send(embed=embed)
    else:
        member = await bot.fetch_channel(993573116305481850)
        embed = disnake.Embed(
            title="–ù–æ–≤—ã–π –±–∞–≥!",
            description=
            f">>> **–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:**\n`{ctx.author}`\n\n**–ê–π–¥–∏:**\n`{ctx.author.id}`\n\n**–ë–∞–≥:**\n`{bug}`",
            color=disnake.Color.green())
        await member.send(embed=embed)
        embed2 = disnake.Embed(
            title="‚úÖ | –£—Å–ø–µ—à–Ω–æ!",
            description=f">>> –ë–∞–≥ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –Ω–∞ —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∏–µ",
            color=disnake.Color.green())
        await ctx.author.send(embed=embed2)


@bot.command(aliases=['Ping', '–ø–∏–Ω–≥', '–ü–∏–Ω–≥'])
async def ping(ctx):
    if not ctx.author.id in dev_ids:
        return await ctx.send("**X–º–º...**",
                              embed=disnake.Embed(
                                  title=':x:–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
                                  description=f'–¢—ã –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ -_-',
                                  colour=0xf00a0a))
    ping = bot.ws.latency
    message = await ctx.send('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. . .')
    await message.edit(
        embed=disnake.Embed(title='–ü–æ–Ω–≥',
                            description=f'`{ping * 1000:.0f}ms` :ping_pong:',
                            colour=0x0059ff))


@bot.command(aliases=[
    'bot-info', '–ë–æ—Ç-–ò–Ω—Ñ–æ', '–±–æ—Ç-–∏–Ω—Ñ–æ', '–∏–Ω—Ñ–æ-–±–æ—Ç', '–ò–Ω—Ñ–æ-–ë–æ—Ç', '–ò–Ω—Ñ–æ-–±–æ—Ç',
    'infobot'
])
async def botinfo(ctx):
    embed = disnake.Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ',
                          description="""
**–ú–µ–Ω—è –∑–æ–≤—É—Ç `EpicBot`**\n ```–Ø —Å–æ–∑–¥–∞–Ω,—á—Ç–æ–±—ã –∑–∞—â–∏—â–∞—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç —Ä–µ–π–¥–µ—Ä–æ–≤ –∏ –∫—Ä–∞—à–µ—Ä–æ–≤ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ``` \n **–ú–æ–π –ø—Ä–µ—Ñ–∏–∫—Å:** `#` \n **–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏** `#help` """,
                          colour=15105570)
    embed.add_field(name='**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏**',
                    value='<@834377109945319488>, <@692071250968969266>')
    embed.add_field(name='–ë–¥', value='`Sqlite3`', inline=True)
    embed.add_field(
        name='–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –º–µ–Ω—è',
        value=
        f'[–∫–ª–∏–∫](https://disnake.com/api/oauth2/authorize?bot_id=985938937493192874&permissions=8&scope=bot)',
        inline=True)
    embed.add_field(name='–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
                    value='[–ö–ª–∏–∫](https://disnake.gg/MwTY7vYRb4)',
                    inline=True)
    embed.set_footer(
        text='–í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã | EpicBot',
        icon_url=
        'https://cdn.disnakeapp.com/avatars/985938937493192874/1cbce5e5e511f9841e7de58fdd605fe0.png?size=512'
    )
    await ctx.message.add_reaction('‚úÖ')
    await ctx.send(embed=embed)


bot.run(os.getenv("token"))
