import disnake
from disnake.ext import commands
from disnake import TextInputStyle

import os

#from keep_alive import keep_alive

import asyncio
import random
import datetime, time

for filename in os.listdir('./cogs'):
  in filename.endswith('.py'):
    client.load_extension(f'cogs.{filename[:-3]}')

class Idea(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(
                label="–ó–∞–≥–æ–ª–æ–≤–æ–∫",
                placeholder="–¢–µ–º—è –∏–¥–µ–π",
                custom_id="—Ç–µ–º–∞",
                style=TextInputStyle.short,
                max_length=50,
            ),
            disnake.ui.TextInput(
                label="–û–ø–∏—Å–∞–Ω–∏–µ",
                placeholder='–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –∏–¥–µ—é',
                custom_id="–æ–ø–∏—Å–∞–Ω–∏–µ",
                style=TextInputStyle.paragraph,
            ),
        ]
        super().__init__(
            title="–ò–¥–µ—è",
            custom_id="create_tag",
            components=components,
        )

    
    async def callback(self, inter):
        embed = disnake.Embed(title="–ù–æ–≤–∞—è –∏–¥–µ—è")
        for key, value in inter.text_values.items():
            embed.add_field(
                name=key.capitalize(),
                value=value[:1024],
                inline=False,
            )
            embed.set_footer(text = f'–û—Ç–ø—Ä–∞–≤–∏–ª: {inter.author.name}')
        channel = client.get_channel(1005905296834707526)
        await channel.send(embed=embed)
        await inter.author.send('–ò–¥–µ—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ')

class PersistentView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(
        label="üî∞ | –ò–¥–µ—è", style=disnake.ButtonStyle.green, custom_id="idea"
    )
    async def idea(self, button, inter):
      await inter.response.send_modal(modal=Idea())
      

class Jaloba(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(
                label="–ó–∞–≥–æ–ª–æ–≤–æ–∫",
                placeholder="–¢–µ–º—è –∂–∞–ª–æ–±—ã",
                custom_id="—Ç–µ–º–∞",
                style=TextInputStyle.short,
                max_length=50,
            ),
            disnake.ui.TextInput(
                label="–ù–∞—Ä—É—à–∏—Ç–µ–ª—å",
                placeholder="–£–∫–∞–∂–∏—Ç–µ ID –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è",
                custom_id="iD –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è",
                style=TextInputStyle.short,
                max_length=20,
            ),
            disnake.ui.TextInput(
                label="–û–ø–∏—Å–∞–Ω–∏–µ",
                placeholder='–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ —Å–¥–µ–ª–∞–ª –Ω–∞—Ä—É—à–∏–ª–µ–ª—å',
                custom_id="–æ–ø–∏—Å–∞–Ω–∏–µ",
                style=TextInputStyle.paragraph,
            ),
            disnake.ui.TextInput(
                label="–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
                placeholder="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –§–æ—Ç–æ/–í–∏–¥–µ–æ",
                custom_id="—Å—Å—ã–ª–∫–∞",
                style=TextInputStyle.short,
                max_length=150,
            ),
        ]
        super().__init__(
            title="–ñ–∞–ª–æ–±–∞",
            custom_id="create_tag",
            components=components,
        )

    async def callback(self, inter):
        embed = disnake.Embed(title="–ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞")
        for key, value in inter.text_values.items():
            embed.add_field(
                name=key.capitalize(),
                value=value[:1024],
                inline=False,
            )
            embed.set_footer(text = f'–û—Ç–ø—Ä–∞–≤–∏–ª: {inter.author.name}')
        channel = client.get_channel(1005905371635920896)
        await channel.send(embed=embed)

class Persistent(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(
        label="üö´ | –ñ–∞–ª–æ–±–∞", style=disnake.ButtonStyle.red, custom_id="jaloba"
    )
    async def jaloba(self, button, inter):
      await inter.response.send_modal(modal=Jaloba())
      await inter.author.send('–ñ–∞–ª–æ–±–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ')

class VS(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(
                label="–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã",
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã",
                custom_id="—Å—Ç—Ä–∞–Ω–∞",
                style=TextInputStyle.short,
                max_length=50,
            ),
            disnake.ui.TextInput(
                label="–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏",
                placeholder='–í–≤–µ–¥–∏—Ç–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω—ã',
                custom_id="—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏",
                style=TextInputStyle.paragraph,
            ),
            disnake.ui.TextInput(
                label="–§–ª–∞–≥ —Å—Ç—Ä–∞–Ω—ã",
                placeholder='–í–≤–µ–¥–∏—Ç–µ —Ñ–ª–∞–≥ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω—ã',
                custom_id="—Ñ–ª–∞–≥",
                style=TextInputStyle.short,
                max_length=3,
            ),
        ]
        super().__init__(
            title="–í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω",
            custom_id="create_tag",
            components=components,
        )

    async def callback(self, inter):
        embed = disnake.Embed(title="–ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∞")
        for key, value in inter.text_values.items():
            embed.add_field(
                name=key.capitalize(),
                value=value[:1024],
                inline=False,
            )
            embed.set_footer(text = f'–û—Ç–ø—Ä–∞–≤–∏–ª: {inter.author.name}')
        channel = client.get_channel(1005905452019748883)
        await channel.send(embed=embed)

class Strana(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(
        label="üî∞ | –í—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω—É", style=disnake.ButtonStyle.green, custom_id="strana"
    )
    async def strana(self, button, inter):
      await inter.response.send_modal(modal=VS())
      await inter.author.send('–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ')

class Nabor(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(
                label="–ò–º—è",
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –∏–ª–∏ –ø—Å–µ–≤–¥–æ–Ω–∏–º",
                custom_id="–∏–º—è",
                style=TextInputStyle.short,
                max_length=50,
            ),
            disnake.ui.TextInput(
                label="–í–æ–∑—Ä–∞—Å—Ç",
                placeholder='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç',
                custom_id="–≤–æ–∑—Ä–∞—Å—Ç",
                style=TextInputStyle.short,
                max_length=3,
            ),
            disnake.ui.TextInput(
                label="–û–ø—ã—Ç",
                placeholder='–û–ø—ã—Ç –≤ —ç—Ç–æ–π —Å—Ñ–µ—Ä–µ(0/10)',
                custom_id="–æ–ø—ã—Ç",
                style=TextInputStyle.short,
                max_length=5,
            ),
            disnake.ui.TextInput(
                label="–ü–∞—Ä—Ç–Ω–µ—Ä–∫–∞",
                placeholder='–°–∫–æ–ª—å–∫–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–∫ –≤ –¥–µ–Ω—å —Å–º–æ–∂–Ω—Ç–µ(–º–∏–Ω–∏–º—É–º 5)',
                custom_id="–ø–∞—Ä—Ç–Ω–µ—Ä–æ–∫-–≤-–¥–µ–Ω—å",
                style=TextInputStyle.short,
                max_length=3,
            ),
            disnake.ui.TextInput(
                label="–†–∞–∑–≤–∏—Ç–∏–µ —Å–µ—Ä–≤–µ—Ä–∞",
                placeholder='–ì–æ—Ç–æ–≤—ã –ø–æ–º–æ–≥–∞—Ç—å –∏ —Ä–∞–∑–≤–∏–∞—Ç—å —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä?',
                custom_id="—Ä–∞–∑–≤–∏—Ç–∏–µ",
                style=TextInputStyle.paragraph,
            ),
            disnake.ui.TextInput(
                label="–ü–∞—Ä–≤–∏–ª–∞",
                placeholder='–í—ã –ø—Ä–æ–≤–∏—Ç–∞–ª–∏ –ü—Ä–∞–≤–∏–ª–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∫–∏ –∏ –ù–æ–Ω —Ä–ø –ø—Ä–∞–≤–∏–ª–∞?',
                custom_id="–ø–∞—Ä–≤–∏–ª–∞",
                style=TextInputStyle.paragraph,
            ),
        ]
        super().__init__(
            title="–ü–∏–∞—Ä –º–µ–Ω–µ—Ä–∂–µ—Ä",
            custom_id="create_tag",
            components=components,
        )

    async def callback(self, inter):
        embed = disnake.Embed(title="–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–∏–∞—Ä –º–µ—Ä–µ–¥–∂–µ—Ä")
        for key, value in inter.text_values.items():
            embed.add_field(
                name=key.capitalize(),
                value=value[:1024],
                inline=False,
            )
            embed.set_footer(text = f'–û—Ç–ø—Ä–∞–≤–∏–ª: {inter.author.name}')
        channel = client.get_channel(1005905452019748883)
        await channel.send(embed=embed)

class Piar(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(
        label="üî∞ | –ü–∏–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä", style=disnake.ButtonStyle.green, custom_id="piars"
    )
    async def piars(self, button, inter):
      await inter.response.send_modal(modal=Nabor())
      await inter.author.send('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ')

class Nabr(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(
                label="–ò–º—è",
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è",
                custom_id="–∏–º—è",
                style=TextInputStyle.short,
                max_length=50,
            ),
            disnake.ui.TextInput(
                label="–í–æ–∑—Ä–∞—Å—Ç",
                placeholder='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç',
                custom_id="–≤–æ–∑—Ä–∞—Å—Ç",
                style=TextInputStyle.short,
                max_length=3,
            ),
            disnake.ui.TextInput(
                label="–û–ø—ã—Ç",
                placeholder='–û–ø—ã—Ç –≤ —ç—Ç–æ–π —Å—Ñ–µ—Ä–µ(0/10)',
                custom_id="–æ–ø—ã—Ç",
                style=TextInputStyle.short,
                max_length=5,
            ),
            disnake.ui.TextInput(
                label="–û —Å–µ–±–µ",
                placeholder='–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ(3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)',
                custom_id="–æ-—Å–µ–±–µ",
                style=TextInputStyle.paragraph,
                max_length=3,
            ),
            disnake.ui.TextInput(
                label="–û –¥–æ–ª–∂–Ω–æ—Å—Ç–∏",
                placeholder='–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏(3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)',
                custom_id="–æ-–¥–æ–ª–∂–Ω–æ—Å—Ç–∏",
                style=TextInputStyle.paragraph,
            ),
            disnake.ui.TextInput(
                label="–ê–∫—Ç–∏–≤",
                placeholder='–ì–æ—Ç–æ–≤—ã –ø–æ–¥–Ω–∏–º–∞—Ç—å –∞–∫—Ç–∏–≤ –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–µ—Ä–≤–µ—Ä–æ–º?',
                custom_id="–ø–∞—Ä–≤–∏–ª–∞",
                style=TextInputStyle.short,
                max_length=10,
            ),
        ]
        super().__init__(
            title="–í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω",
            custom_id="create_tag",
            components=components,
        )

    async def callback(self, inter):
        embed = disnake.Embed(title="–ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∞")
        for key, value in inter.text_values.items():
            embed.add_field(
                name=key.capitalize(),
                value=value[:1024],
                inline=False,
            )
            embed.set_footer(text = f'–û—Ç–ø—Ä–∞–≤–∏–ª: {inter.author.name}')
        channel = client.get_channel(1005905452019748883)
        await channel.send(embed=embed)

class Helper(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(
        label="üî∞ | –í—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω—É", style=disnake.ButtonStyle.green, custom_id="strana"
    )
    async def strana(self, button, inter):
      await inter.response.send_modal(modal=Nabor())
      await inter.author.send('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ')



client = commands.Bot(command_prefix='$', help_command=None, intents=disnake.Intents.all())


@client.command()
@commands.has_permissions(administrator=True)
async def –º–æ–¥–∞–ª(ctx, *, arg = None):
    await ctx.message.delete()
    if arg == None:
        await ctx.send(embed = disnake.Embed(title = '–û—à–∏–±–∫–∞', description = '–í—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç.\n–î–µ–∏—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã: –∏–¥–µ—è | –∂–∞–ª–æ–±–∞ | —Å—Ç—Ä–∞–Ω–∞ | –ø–∏–∞—Ä | x–µ–ª–ø–µ—Ä | –º–æ–¥–µ—Ä ', color = disnake.Color.red()))
    elif arg == "–∏–¥–µ—è":
        emb = disnake.Embed(
            description = 
            f"""
            **–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é –¥–ª—è __–°–µ—Ä–≤–µ—Ä–∞__**

**‚ÄºÔ∏è | –ó–∞–ø—Ä–µ—â–µ–Ω–æ**
‚Ä¢ –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–µ –ø–æ —Ç–µ–º–µ —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –¢—Ä–æ–ª–∏—Ç—å
‚Ä¢ –†–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–æ–µ

**üéØ | –ù–∞–∫–∞–∑–∞–Ω–∏–µ**
__–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å__

**üîé | –î—Ä—É–≥–æ–µ**
‚Ä¢ –í–∞—à–∏ –∏–¥–µ–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç–æ–ª—å–∫–æ –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ –∏ <@!834377109945319488>
‚Ä¢ –ï—Å–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—á–µ–≥–æ –Ω–µ –ø—Ä—ã—Å–ª–∞–ª–æ –∑–¥–µ—Å—å, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å–¥–µ–ª–∞–ª–∏ + –æ–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–¥–µ–∏.
            """,
            colour = 0xFF8C00
        )
        emb.set_thumbnail(url = 'https://cdn.disnakeapp.com/attachments/772850448892690462/880752123418136596/947d1f802c858b540b84bc3000fc2439_1_-removebg-preview.png')
        emb.set_author(name = 'üî∞ | –ò–¥–µ—è')
        await ctx.send(embed = emb, view=PersistentView())
    elif arg == '–∂–∞–ª–æ–±–∞':
        emb = disnake.Embed(
            description = 
            f"""
            **–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞**

**üì´ | –ò–≥–Ω–æ—Ä–∏–º**
‚Ä¢ –ö—Ä–∞—à –¥—Ä—É–≥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –£–∫–∞–∑–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –∫—Ä–∞—à–µ—Ä
‚Ä¢ –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä

**‚ÄºÔ∏è | –ó–∞–ø—Ä–µ—â–µ–Ω–æ**
‚Ä¢ –ü–∏—Å–∞—Ç—å –≤ –Ω–µ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–º –≤–∏–¥–µ
‚Ä¢ –†–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–æ–µ

**üéØ | –ù–∞–∫–∞–∑–∞–Ω–∏–µ**
__–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å__

**üîé | –î—Ä—É–≥–æ–µ**
‚Ä¢ –í–∞—à—É –∂–∞–ª–æ–±—É –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç —Ç–æ–ª—å–∫–æ –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ –∏ <@!834377109945319488>
‚Ä¢ –ï—Å–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—á–µ–≥–æ –Ω–µ –ø—Ä—ã—Å–ª–∞–ª–æ –∑–¥–µ—Å—å, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å–¥–µ–ª–∞–ª–∏ + –æ–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∂–∞–ª–æ–±—ã.
            """,
            colour = 0xFF8C00
        )
        emb.set_thumbnail(url = 'https://cdn.disnakeapp.com/attachments/772850448892690462/880752123418136596/947d1f802c858b540b84bc3000fc2439_1_-removebg-preview.png')
        emb.set_author(name = 'üö´ | –ñ–∞–ª–æ–±–∞')
        await ctx.send(embed = emb, view=Persistent())
    elif arg == '—Å—Ç—Ä–∞–Ω–∞':
        emb = disnake.Embed(
            description = 
            f"""
            **–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã __–≤—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω—É__**

**‚ÄºÔ∏è | –ó–∞–ø—Ä–µ—â–µ–Ω–æ**
‚Ä¢ –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–µ –ø–æ —Ç–µ–º–µ —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –¢—Ä–æ–ª–∏—Ç—å
‚Ä¢ –†–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–æ–µ

**üéØ | –ù–∞–∫–∞–∑–∞–Ω–∏–µ**
__–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å__

**üîé | –î—Ä—É–≥–æ–µ** 
‚Ä¢ –í–∞—à–∏ –≤—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç–æ–ª—å–∫–æ –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ –∏ <@!834377109945319488>
‚Ä¢ –ï—Å–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—á–µ–≥–æ –Ω–µ –ø—Ä—ã—Å–ª–∞–ª–æ –∑–¥–µ—Å—å, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å–¥–µ–ª–∞–ª–∏ + –æ–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.
        """,
            colour = 0xFF8C00
        )
        emb.set_footer(text = f'–ï—Å–ª–∏ —Ñ–ª–∞–≥–∞ –Ω–µ—Ç—É –≤ —ç–º–æ–¥–∂–∏ —Ç–æ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–ª–∞–≥ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –ª—Å `Á´•Á£®#2478` –∏–ª–∏ `—à–æ—Ö–∂–∞—Ö–æ–Ω#0001`')
        emb.set_thumbnail(url = 'https://cdn.disnakeapp.com/attachments/772850448892690462/880752123418136596/947d1f802c858b540b84bc3000fc2439_1_-removebg-preview.png')
        emb.set_author(name = 'üî∞ | –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω')
        await ctx.send(embed = emb, view=Strana())
    elif arg == '–ø–∏–∞—Ä':
        emb = disnake.Embed(
            description = 
            f"""
            **–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É __–Ω–∞ –ø–∏–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞__**

**‚ÄºÔ∏è | –ó–∞–ø—Ä–µ—â–µ–Ω–æ**
‚Ä¢ –ü–∏—Å–∞—Ç—å –Ω–µ –ø–æ —Ç–µ–º–µ —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –¢—Ä–æ–ª–∏—Ç—å
‚Ä¢ –†–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–æ–µ

**üéØ | –ù–∞–∫–∞–∑–∞–Ω–∏–µ**
__–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å__

**üîé | –î—Ä—É–≥–æ–µ** 
‚Ä¢ –í–∞—à—É –∑–∞—è–≤–∫—É –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç–æ–ª—å–∫–æ –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ –∏ <@!834377109945319488>
‚Ä¢ –ï—Å–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—á–µ–≥–æ –Ω–µ –ø—Ä—ã—Å–ª–∞–ª–æ –∑–¥–µ—Å—å, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å–¥–µ–ª–∞–ª–∏ + –æ–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.
        """,
            colour = 0xFF8C00
        )
        emb.set_thumbnail(url = 'https://cdn.disnakeapp.com/attachments/772850448892690462/880752123418136596/947d1f802c858b540b84bc3000fc2439_1_-removebg-preview.png')
        emb.set_author(name = 'üî∞ | –ü–∏–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä')
        await ctx.send(embed = emb, view=Piar())
    elif arg == '–ø–∏–∞—Ä':
        emb = disnake.Embed(
            description = 
            f"""
            **–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É __–Ω–∞ –ø–∏–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞__**

**‚ÄºÔ∏è | –ó–∞–ø—Ä–µ—â–µ–Ω–æ**
‚Ä¢ –ü–∏—Å–∞—Ç—å –Ω–µ –ø–æ —Ç–µ–º–µ —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –¢—Ä–æ–ª–∏—Ç—å
‚Ä¢ –†–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–æ–µ

**üéØ | –ù–∞–∫–∞–∑–∞–Ω–∏–µ**
__–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å__

**üîé | –î—Ä—É–≥–æ–µ** 
‚Ä¢ –í–∞—à—É –∑–∞—è–≤–∫—É –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç–æ–ª—å–∫–æ –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ –∏ <@!834377109945319488>
‚Ä¢ –ï—Å–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—á–µ–≥–æ –Ω–µ –ø—Ä—ã—Å–ª–∞–ª–æ –∑–¥–µ—Å—å, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å–¥–µ–ª–∞–ª–∏ + –æ–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.
        """,
            colour = 0xFF8C00
        )
        emb.set_thumbnail(url = 'https://cdn.disnakeapp.com/attachments/772850448892690462/880752123418136596/947d1f802c858b540b84bc3000fc2439_1_-removebg-preview.png')
        emb.set_author(name = 'üî∞ | –ü–∏–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä')
        await ctx.send(embed = emb, view=Piar())

#@client.event
#async def on_button_click(inter):

 #   guild = client.get_guild(inter.guild.id)

  #  if inter.component.id == "idea":
   #   await inter.response.send_modal(modal=MyModal())

@client.event
async def on_ready():
    print('–ë–æ—Ç –æ–Ω–ª–∞–π–Ω')
    await client.change_presence(status=disnake.Status.idle,
                                 activity=disnake.Game('–ò–≥—Ä–∞–µ—Ç –≤ ùëØùíÇùíìùíÖ ùëπùíñùíîùíîùíäùíÇ'))

@client.command()
@commands.has_role("Giveaway")
async def giveaway(ctx):
    giveaway_questions = [
        '–ù–∞ –∫–∞–∫–æ–º –∫–∞–Ω–∞–ª–µ —è –±—É–¥—É –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à?',
        '–ö–∞–∫–æ–π –±—É–¥–µ—Ç –ø—Ä–∏–∑?',
        '–ö–∞–∫ –¥–æ–ª–≥–æ –¥–æ–ª–∂–µ–Ω –¥–ª–∏—Ç—å—Å—è —Ä–æ–∑—ã–≥—Ä—ã—à (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)?',
    ]
    giveaway_answers = []

    # Checking to be sure the author is the one who answered and in which channel
    def check(m):
        return m.author == ctx.author and m.channel == ctx.channel

    for question in giveaway_questions:
        await ctx.send(question)
        try:
            message = await client.wait_for('message',
                                            timeout=60.0,
                                            check=check)
        except asyncio.TimeoutError:
            await ctx.send(
                '–í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–æ–≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –≤–æ–ø—Ä–æ—Å–∞.'
            )
            return
        else:
            giveaway_answers.append(message.content)

    try:
        c_id = int(giveaway_answers[0][2:-1])
    except:
        await ctx.send(
            f'–í—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ —Ç–∞–∫: {ctx.channel.mention}'
        )
        return

    channel = client.get_channel(c_id)
    prize = str(giveaway_answers[1])
    time = int(giveaway_answers[2])

    # Sends a message to let the host know that the giveaway was started properly
    await ctx.send(
        f'–†–æ–∑—ã–≥—Ä—ã—à {prize} –Ω–∞—á–Ω–µ—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ {channel.mention}, —Ä–æ–∑—ã–≥—Ä—ã—à –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ {time} —Å–µ–∫—É–Ω–¥.'
    )

    give = disnake.Embed(color=0x2ecc71)
    give.set_author(name=f'–†–û–ó–´–ì–†–´–®!',
                    icon_url='https://i.imgur.com/VaX0pfM.png')
    give.add_field(
        name=f'{prize}!',
        value=
        f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ üéâ, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏!\n –ó–∞–∫–æ–Ω—á–∏—Ç—Å—è: `—á–µ—Ä–µ–∑ {round(time/60, 2)} –º–∏–Ω—É—Ç!`',
        inline=False)
    end = datetime.datetime.utcnow() + datetime.timedelta(seconds=time)
    give.set_footer(text=f'–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –≤ {end} UTC!')
    my_message = await channel.send(embed=give)

    await my_message.add_reaction("üéâ")
    await asyncio.sleep(time)

    new_message = await channel.fetch_message(my_message.id)

    users = await new_message.reactions[0].users().flatten()
    users.pop(users.index(client.user))
    winner = random.choice(users)

    winning_announcement = disnake.Embed(color=0xff2424)
    winning_announcement.set_author(name=f'–†–û–ó–´–ì–†–´–® –ó–ê–ö–û–ù–ß–ò–õ–°–Ø!',
                                    icon_url='https://i.imgur.com/DDric14.png')
    winning_announcement.add_field(
        name=f'üéâ –ü—Ä–∏–∑: {prize}',
        value=
        f'ü•≥ **–ü–æ–±–µ–¥–∏—Ç–µ–ª—å**: {winner.mention}\n üé´ **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**: {len(users)}',
        inline=False)
    winning_announcement.set_footer(text='–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!')
    await channel.send(embed=winning_announcement)


@client.command()
@commands.has_role("Giveaway")
async def reroll(ctx, channel: disnake.TextChannel, id_: int):
    # Reroll command requires the user to have a "Giveaway" role to function properly
    try:
        new_message = await channel.fetch_message(id_)
    except:
        await ctx.send("–ù–µ–≤–µ—Ä–Ω—ã–π id.")
        return

    users = await new_message.reactions[0].users().flatten()
    users.pop(users.index(client.user))
    winner = random.choice(users)

    reroll_announcement = disnake.Embed(color=0xff2424)
    reroll_announcement.set_author(
        name=f'–†–æ–∑—ã–≥—Ä—ã—à –±—ã–ª –ø–æ–≤—Ç–æ—Ä–µ–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º!',
        icon_url='https://i.imgur.com/DDric14.png')
    reroll_announcement.add_field(name=f'ü•≥ –ù–æ–≤—ã–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å:',
                                  value=f'{winner.mention}',
                                  inline=False)
    await channel.send(embed=reroll_announcement)


#keep_alive()

client.run(
    os.getenv(
        'Tg3NzMzODI1OTU2MjMzMjI2.GJZW1V.vD_0QN_Kx1GJdZ22DgAlP6_68Is82yIIPCRocR'
    ))
